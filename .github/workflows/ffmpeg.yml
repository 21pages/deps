name: ffmpeg

on:
  workflow_dispatch:
  push:
  # pull_request:

env:
  TAG_NAME: "dev"
  NDK_VERSION: "r26b"

permissions:
  contents: write

jobs:

  build-for-windows:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-pc-windows-msvc, os: windows-2019, arch: x86_64 }
          - { target: i686-pc-windows-msvc, os: windows-2019, arch: x86 }
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1

    - name: cuda-toolkit
      uses: Jimver/cuda-toolkit@v0.2.6
            

    - name: Msys2
      uses: msys2/setup-msys2@v2
      with:
        path-type: inherit
        update: true
        install: >-
          git
          base-devel
          diffutils
          make
          cmake
          pkg-config
          yasm
          nasm

    - name: test
      shell: msys2 {0}
      run: |
        cl

    - name: Source FFmpeg
      run: |
        git clone -b hwcodec --depth=1 https://github.com/21pages/FFmpeg.git
        mkdir includes
        mkdir libs
        ls -al

    - name: Source nv-codec-headers
      run: |
        git clone --depth=1 -b n11.1.5.2 https://github.com/FFmpeg/nv-codec-headers.git
        cd nv-codec-headers
        make && make install
        cd -
    
    - name: Source AMF
      run: |
        git clone --depth=1 -b v1.4.29 https://github.com/GPUOpen-LibrariesAndSDKs/AMF.git
        cp -r ./AMF/amf/public/include includes/AMF
        ls -al includes
    
    - name: Configure
      working-directory: ${{github.workspace}}/FFmpeg
      shell: msys2 {0}
      run: |
        PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH \
        CC=cl.exe \
        ./configure  \
        --arch=${{ matrix.job.arch }} \
        --toolchain=msvc \
        --prefix=../release \
        --disable-everything \
        --disable-shared \
        --disable-programs \
        --disable-doc \
        --disable-htmlpages \
        --disable-manpages \
        --disable-podpages \
        --disable-txtpages \
        --disable-network \
        --disable-appkit \
        --disable-coreimage  \
        --disable-metal \
        --disable-sdl2 \
        --disable-securetransport \
        --disable-vulkan \
        --disable-audiotoolbox \
        --disable-v4l2-m2m \
        --disable-debug \
        --disable-valgrind-backtrace \
        --disable-large-tests \
        --enable-avdevice \
        --enable-avcodec \
        --enable-avformat \
        --enable-avfilter \
        --enable-avdevice \
        --disable-swresample \
        --disable-swscale \
        --disable-postproc \
        --enable-gpl \
        --enable-d3d11va \
        --enable-decoder=h264 \
        --enable-decoder=hevc \
        --enable-hwaccel=h264_nvdec \
        --enable-hwaccel=hevc_nvdec \
        --enable-hwaccel=h264_d3d11va \
        --enable-hwaccel=hevc_d3d11va \
        --enable-hwaccel=h264_d3d11va2 \
        --enable-hwaccel=hevc_d3d11va2 \
        --enable-parser=h264 \
        --enable-parser=hevc \
        --enable-bsf=h264_mp4toannexb \
        --enable-bsf=hevc_mp4toannexb  \
        --enable-amf \
        --enable-encoder=h264_amf \
        --enable-encoder=hevc_amf \
        --enable-encoder=h264_nvenc \
        --enable-encoder=hevc_nvenc \
        --extra-cflags="-I../includes" \
        --extra-ldflags="-libpath:$PWD/../libs"
        cat ffbuild/config.log | grep nvenc
    
    - name: Build
      working-directory: FFmpeg
      shell: msys2 {0}
      run: |
        make -j32 && make install
    
    - name: Create Archive
      uses: thedoctor0/zip-release@0.7.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        type: 'zip'
        filename: './ffmpeg_windows_${{ matrix.job.arch }}.zip'
        path: 'release'
    
    - name: Publish
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: true
        tag_name: ${{ env.TAG_NAME }}
        files: | 
          ./ffmpeg_windows_${{ matrix.job.arch }}.zip
          ${{github.workspace}}/FFmpeg/ffbuild/config.log

  build-for-linux:
    if: false
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-20.04, arch: x86_64 }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-20.04, arch: aarch64 }
          - { target: armv7-unknown-linux-gnueabihf, os: ubuntu-latest, arch: armv7 }
      
    steps:
  
      - uses: actions/checkout@v2
  
      - name: tools
        run: |
          sudo apt-get install build-essential
          sudo apt-get -y install yasm pkg-config
  
      - name: Source FFmpeg
        run: |
          git clone --depth=1 https://github.com/21pages/FFmpeg.git
          mkdir includes
          mkdir libs
          ls -al
  
      - name: Source AMF
        run: |
          git clone --depth=1 -b v1.4.29 https://github.com/GPUOpen-LibrariesAndSDKs/AMF.git
          cp -r ./AMF/amf/public/include includes/AMF
          ls -al includes
      
      - name: Configure
        working-directory: ${{github.workspace}}/FFmpeg
        run: |
          CC=gcc \
          ./configure  \
          --prefix=../release \
          --disable-everything \
          --disable-shared \
          --disable-programs \
          --disable-doc \
          --disable-htmlpages \
          --disable-manpages \
          --disable-podpages \
          --disable-txtpages \
          --disable-network \
          --disable-appkit \
          --disable-coreimage  \
          --disable-metal \
          --disable-sdl2 \
          --disable-securetransport \
          --disable-vulkan \
          --disable-audiotoolbox \
          --disable-v4l2-m2m \
          --disable-debug \
          --disable-valgrind-backtrace \
          --disable-large-tests \
          --enable-avdevice \
          --enable-avcodec \
          --enable-avformat \
          --disable-swresample \
          --enable-swscale \
          --disable-postproc \
          --disable-avfilter \
          --enable-decoder=h264 \
          --enable-decoder=hevc \
          --enable-parser=h264 \
          --enable-parser=hevc \
          --enable-bsf=h264_mp4toannexb \
          --enable-bsf=hevc_mp4toannexb  \
          --enable-amf \
          --enable-encoder=h264_amf \
          --enable-encoder=hevc_amf \
          --extra-cflags="-I../includes" \
          --extra-ldflags="-L$PWD/../libs"
  
      - name: Build
        working-directory: FFmpeg
        run: |
          make -j32 && make install
      
      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          type: 'zip'
          filename: 'ffmpeg_linux_${{ matrix.job.arch }}.zip'
          path: 'release'
      
      - name: Publish
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: | 
            ./ffmpeg_linux_${{ matrix.job.arch }}.zip
  
  build-for-macos:
    if: false
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-apple-darwin, os: macos-latest, arch: x86_64 }
      
    steps:
  
      - uses: actions/checkout@v2
  
      - name: tools
        run: |
          brew install yasm pkg-config
  
      - name: Source FFmpeg
        run: |
          git clone --depth=1 https://github.com/21pages/FFmpeg.git
          mkdir includes
          mkdir libs
          ls -al
      
      - name: Configure
        working-directory: ${{github.workspace}}/FFmpeg
        run: |
          CC=gcc \
          ./configure  \
          --prefix=../release \
          --disable-everything \
          --disable-shared \
          --disable-programs \
          --disable-doc \
          --disable-htmlpages \
          --disable-manpages \
          --disable-podpages \
          --disable-txtpages \
          --disable-network \
          --disable-appkit \
          --disable-coreimage  \
          --disable-sdl2 \
          --disable-securetransport \
          --disable-vulkan \
          --disable-audiotoolbox \
          --disable-v4l2-m2m \
          --disable-debug \
          --disable-valgrind-backtrace \
          --disable-large-tests \
          --enable-avdevice \
          --enable-avcodec \
          --enable-avformat \
          --disable-swresample \
          --enable-swscale \
          --disable-postproc \
          --disable-avfilter \
          --extra-cflags="-I../includes" \
          --extra-ldflags="-L$PWD/../libs"
  
      - name: Build
        working-directory: FFmpeg
        run: |
          make -j32 && make install
      
      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          type: 'zip'
          filename: 'ffmpeg_macos_${{ matrix.job.arch }}.zip'
          path: 'release'
      
      - name: Publish
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: | 
            ./ffmpeg_macos_${{ matrix.job.arch }}.zip

  build-for-android:
    if: false
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: aarch64-linux-android, os: ubuntu-20.04, arch: aarch64, ndk_toolchain_path: aarch64-linux-android }
          - { target: armv7-linux-androideabi, os: ubuntu-20.04, arch: armv7, ndk_toolchain_path: armv7a-linux-androideabi }
    steps:
  
      - uses: actions/checkout@v2
  
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc-multilib \
               git \
               g++ \
               g++-multilib \
               libappindicator3-dev \
               libasound2-dev \
               libc6-dev \
               libclang-10-dev \
               libclang-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libvdpau-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               llvm-10-dev \
               llvm-dev \
               nasm \
               ninja-build \
               openjdk-11-jdk-headless \
               pkg-config \
               tree \
               wget

      
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true

      - name: Source FFmpeg
        run: |
          git clone --depth=1 https://github.com/21pages/FFmpeg.git
          mkdir includes
          mkdir libs
          ls -al
          uname -a
          ls $ANDROID_NDK/toolchains/llvm/prebuilt/
      
      - name: Configure
        working-directory: ${{github.workspace}}/FFmpeg
        run: |
          export HOST_TAG="linux-x86_64" # current platform, set as `ls $ANDROID_NDK/toolchains/llvm/prebuilt/`
          export TOOLCHAIN=$ANDROID_NDK/toolchains/llvm/prebuilt/$HOST_TAG
          export NDK_LLVM_TARGET=${{ matrix.job.target }}
          # export AR=$TOOLCHAIN/bin/${NDK_LLVM_TARGET}-ar
          # export AS=$TOOLCHAIN/bin/${NDK_LLVM_TARGET}-as
          # export LD=$TOOLCHAIN/bin/${NDK_LLVM_TARGET}-ld.gold  # if ndk < 22, use aarch64-linux-android-ld
          # export RANLIB=$TOOLCHAIN/bin/${NDK_LLVM_TARGET}-ranlib
          # export STRIP=$TOOLCHAIN/bin/${NDK_LLVM_TARGET}-strip
          export API_LEVEL="21"
          export CC=$TOOLCHAIN/bin/${{ matrix.job.ndk_toolchain_path }}${API_LEVEL}-clang
          export CXX=$TOOLCHAIN/bin/${{ matrix.job.ndk_toolchain_path }}${API_LEVEL}-clang++

          ./configure  \
          --enable-cross-compile \
          --cross-prefix=$TOOLCHAIN/bin/${NDK_LLVM_TARGET} \
          --arch=${{ matrix.job.arch }} \
          --target-os=android \
          --prefix=../release \
          --disable-everything \
          --disable-shared \
          --disable-programs \
          --disable-doc \
          --disable-htmlpages \
          --disable-manpages \
          --disable-podpages \
          --disable-txtpages \
          --disable-network \
          --disable-appkit \
          --disable-coreimage  \
          --disable-sdl2 \
          --disable-securetransport \
          --disable-vulkan \
          --disable-audiotoolbox \
          --disable-v4l2-m2m \
          --disable-debug \
          --disable-valgrind-backtrace \
          --disable-large-tests \
          --enable-avdevice \
          --enable-avcodec \
          --enable-avformat \
          --disable-swresample \
          --enable-swscale \
          --disable-postproc \
          --disable-avfilter \
          --extra-cflags="-I../includes" \
          --extra-ldflags="-L$PWD/../libs"
  
      - name: Build
        working-directory: FFmpeg
        run: |
          make -j32 && make install
      
      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          type: 'zip'
          filename: 'ffmpeg_android_${{ matrix.job.arch }}.zip'
          path: 'release'
      
      - name: Publish
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: | 
            ./ffmpeg_android_${{ matrix.job.arch }}.zip
            
  
  build-for-ios:
    if: false
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: aarch64-apple-ios, os: macos-latest, arch: aarch64 }
      
    steps:
  
      - uses: actions/checkout@v2
  
    #   - name: tools
    #     run: |
    #       sudo apt-get -y install yasm pkg-config
  
      - name: Source FFmpeg
        run: |
          git clone --depth=1 https://github.com/21pages/FFmpeg.git
          mkdir includes
          mkdir libs
          ls -al
      
      - name: Configure
        working-directory: ${{github.workspace}}/FFmpeg
        run: |
          ./configure  \
          --enable-cross-compile
          --prefix=../release \
          --disable-everything \
          --disable-shared \
          --disable-programs \
          --disable-doc \
          --disable-htmlpages \
          --disable-manpages \
          --disable-podpages \
          --disable-txtpages \
          --disable-network \
          --disable-appkit \
          --disable-coreimage  \
          --disable-sdl2 \
          --disable-securetransport \
          --disable-vulkan \
          --disable-audiotoolbox \
          --disable-v4l2-m2m \
          --disable-debug \
          --disable-valgrind-backtrace \
          --disable-large-tests \
          --enable-avdevice \
          --enable-avcodec \
          --enable-avformat \
          --disable-swresample \
          --enable-swscale \
          --disable-postproc \
          --disable-avfilter \
          --extra-cflags="-I../includes" \
          --extra-ldflags="-L$PWD/../libs"
  
      - name: Build
        working-directory: FFmpeg
        run: |
          make -j32 && make install
      
      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          type: 'zip'
          filename: 'ffmpeg_ios_${{ matrix.job.arch }}.zip'
          path: 'release'
      
      - name: Publish
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: | 
            ./ffmpeg_ios_${{ matrix.job.arch }}.zip

